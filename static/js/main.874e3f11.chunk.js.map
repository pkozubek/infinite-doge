{"version":3,"sources":["components/spinner.js","components/spinner/singleImage/singleImage.js","components/imageContainer.js","components/Images.js","components/menuTab.js","components/favourite.js","App.js","serviceWorker.js","index.js"],"names":["spinner","props","isVisble","react_default","a","createElement","CircularProgress","style","width","height","margin","color","singleImage","state","isLoaded","_this2","this","imageStyle","display","console","log","canBeLiked","className","components_spinner","src","Object","objectSpread","onLoad","setState","onClick","click","Favorite_default","fontSize","Delete_default","Component","imageContainer","flexWrap","justifyContent","alignItems","children","Images","_this","images","imageArray","map","index","spinner_singleImage_singleImage","key","components_imageContainer","menuTab","AppBar","position","Tabs","centered","value","currentMenu","onChange","changeTab","Tab","label","favourite","API_URL","CORS_ANYWHERE","App","waypointActivated","loadImages","localArray","axios","get","then","response","i","data","length","push","concat","toConsumableArray","catch","error","event","menu","addToFavourite","image","includes","removeFromFavourite","filter","favImg","mainDiv","components_Images","components_favourite","components_menuTab","fullWidth","es","onEnter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.874e3f11.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst spinner = props => {\r\n  return props.isVisble ? (\r\n    <CircularProgress\r\n      style={{ width: \"30%\", height: \"100%\", margin: \"0 auto\" }}\r\n      color=\"primary\"\r\n    />\r\n  ) : null;\r\n};\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"../../spinner\";\r\nimport \"./singleImage.css\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\n\r\nclass singleImage extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  };\r\n\r\n  render() {\r\n    const imageStyle = this.state.isLoaded\r\n      ? { display: \"block\" }\r\n      : { display: \"none\" };\r\n\r\n    console.log(this.props.canBeLiked);\r\n\r\n    return (\r\n      <div className=\"singleImageContainer\">\r\n        <Spinner isVisble={!this.state.isLoaded} />\r\n        <img\r\n          src={this.props.src}\r\n          style={{ ...imageStyle, width: \"100%\", height: \"100%\" }}\r\n          onLoad={() => this.setState({ isLoaded: true })}\r\n        />\r\n        <div\r\n          className=\"hovered\"\r\n          onClick={() => this.props.click(this.props.src)}\r\n        >\r\n          <button className=\"likeButton\">\r\n            {this.props.canBeLiked ? (\r\n              <Favorite fontSize=\"large\" />\r\n            ) : (\r\n              <Delete fontSize=\"large\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default singleImage;\r\n","import React from \"react\";\r\n\r\nconst imageContainer = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default imageContainer;\r\n","import React, { Component } from \"react\";\r\nimport SingleImage from \"./spinner/singleImage/singleImage\";\r\nimport ImageContainer from \"./imageContainer\";\r\n\r\nclass Images extends Component {\r\n  render() {\r\n    const images = this.props.imageArray.map((singleImage, index) => (\r\n      <SingleImage\r\n        canBeLiked\r\n        click={this.props.click}\r\n        key={index}\r\n        src={singleImage}\r\n      />\r\n    ));\r\n\r\n    return <ImageContainer>{images}</ImageContainer>;\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst menuTab = props => {\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Tabs centered value={props.currentMenu} onChange={props.changeTab}>\r\n        <Tab value=\"Images\" label=\"Images\" />\r\n        <Tab value=\"Favourite\" label=\"Favourite\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default menuTab;\r\n","import React from \"react\";\r\nimport SingleImage from \"./spinner/singleImage/singleImage\";\r\nimport ImageContainer from \"./imageContainer\";\r\n\r\nconst favourite = props => {\r\n  return (\r\n    <ImageContainer>\r\n      {props.images.map(singleImage => {\r\n        return <SingleImage click={props.click} src={singleImage} />;\r\n      })}\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default favourite;\r\n","import React, { Component } from \"react\";\nimport Images from \"./components/Images\";\nimport \"./App.css\";\nimport MenuTab from \"./components/menuTab\";\nimport Favourite from \"./components/favourite\";\nimport axios from \"axios\";\nimport { Waypoint } from \"react-waypoint\";\n\nconst API_URL = \"http://shibe.online/api/shibes?count=16\";\nconst CORS_ANYWHERE = \"https://cors-anywhere.herokuapp.com/\";\n\nclass App extends Component {\n  state = {\n    currentMenu: \"Images\",\n    favourite: [],\n    imageArray: [],\n    waypointActivated: false\n  };\n\n  componentDidMount() {\n    this.loadImages();\n  }\n\n  loadImages = () => {\n    console.log(\"test\");\n    let localArray = [];\n    axios\n      .get(CORS_ANYWHERE + API_URL)\n      .then(response => {\n        for (let i = 0; i < response.data.length; i++) {\n          localArray.push(response.data[i]);\n        }\n        this.setState({\n          imageArray: [...this.state.imageArray, ...localArray],\n          waypointActivated: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  changeTab = (event, menu) => {\n    this.setState({\n      currentMenu: menu\n    });\n  };\n\n  addToFavourite = image => {\n    if (!this.state.favourite.includes(image))\n      this.setState({\n        favourite: [...this.state.favourite, image]\n      });\n  };\n\n  removeFromFavourite = image => {\n    this.setState({\n      favourite: this.state.favourite.filter(favImg => favImg !== image)\n    });\n  };\n\n  render() {\n    let mainDiv = null;\n\n    switch (this.state.currentMenu) {\n      case \"Images\":\n        mainDiv = (\n          <Images\n            imageArray={this.state.imageArray}\n            click={image => this.addToFavourite(image)}\n          />\n        );\n        break;\n      case \"Favourite\":\n        mainDiv = (\n          <Favourite\n            images={this.state.favourite}\n            click={image => this.removeFromFavourite(image)}\n          />\n        );\n        break;\n      default:\n        mainDiv = null;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <MenuTab\n          fullWidth={true}\n          currentMenu={this.state.currentMenu}\n          changeTab={this.changeTab}\n        />\n        {mainDiv}\n        <Waypoint\n          onEnter={() => {\n            if (\n              this.state.waypointActivated &&\n              this.state.currentMenu === \"Images\"\n            ) {\n              this.loadImages();\n            }\n          }}\n        >\n          <div style={{ display: \"block\", height: \"100px\" }} />\n        </Waypoint>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}